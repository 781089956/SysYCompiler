
    int main()
    {
    int e[10][10],k,i = 1,j = 1,n,m,t1,t2,t3;
    int inf=99999999; //用inf(infinity的缩写)存储一个我们认为的正无穷值
    //读入n和m，n表示顶点个数，m表示边的条数
    n = getint();
    m = getint();
    //初始化
    while(i <= n) {
        j = 1;
        while(j <= n) {
            if(i==j)
                e[i][j]=0;
            else
                e[i][j]=inf;
            j = j + 1;
        }
        i = i + 1;
    }
    i = 1;
    //读入边
    while(i <= m){
        t1 = getint();
        t2 = getint();
        t3 = getint();
        e[t1][t2]=t3;
        i = i + 1;
    }

    k = 1;
    //Floyd-Warshall算法核心语句
    while(k<=n) {
        i = 1;
        while(i<=n) {
            j = 1;
            while(j<=n) {
                if(e[i][j]>e[i][k]+e[k][j])
                    e[i][j]=e[i][k]+e[k][j];
                j = j + 1;
            }
            i = i + 1;
        }
        k = k + 1;
    }


    i = 1;j = 1;
    //输出最终的结果
    while(i<=n) {
        j = 1;
        while(j<=n) {
                putint(e[i][j]);
                putch(32);
                j = j + 1;
            }
            putch(10);
            i = i + 1;
        }
        return 0;
    }